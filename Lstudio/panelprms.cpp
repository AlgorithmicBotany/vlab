#include <fw.h>

#include "panelprms.h"


namespace PanelParameters
{
	int _AveCharWidth = -1;
	int _CharHeight = -1;
	const Font PanelFont(15, "Arial");
}


static const COLORREF DefaultMap[] =
{
	/*   0 */ RGB(  1,   1,   1),	RGB(126,  53,  70),	RGB(130,  55,  75),	RGB(134,  58,  80),	
	/*   4 */ RGB(138,  60,  85),	RGB(142,  63,  90),	RGB(146,  65,  95),	RGB(150,  68, 100),
	/*   8 */ RGB(154,  70, 105),	RGB(159,  73, 110),	RGB(163,  76, 115),	RGB(167,  78, 120),	
	/*  12 */ RGB(171,  81, 126),	RGB(175,  83, 131),	RGB(179,  86, 136),	RGB(183,  88, 141),
	/*  16 */ RGB(187,  91, 146),	RGB(192,  94, 151),	RGB(196,  96, 156),	RGB(200,  99, 161),	
	/*  20 */ RGB(204, 101, 166),	RGB(208, 104, 172),	RGB(212, 106, 177),	RGB(216, 109, 182),
	/*  24 */ RGB(221, 112, 187),	RGB(225, 114, 192),	RGB(229, 117, 197),	RGB(233, 119, 202),	
	/*  28 */ RGB(237, 122, 207),	RGB(241, 124, 212),	RGB(245, 127, 217),	RGB(250, 130, 223),
	/*  32 */ RGB(250, 127, 222),	RGB(248, 120, 222),	RGB(247, 113, 222),	RGB(246, 106, 222),	
	/*  36 */ RGB(245,  99, 222),	RGB(244,  92, 222),	RGB(242,  85, 222),	RGB(241,  78, 222),
	/*  40 */ RGB(240,  72, 222),	RGB(239,  65, 222),	RGB(238,  58, 222),	RGB(236,  51, 222),	
	/*  44 */ RGB(235,  44, 222),	RGB(234,  37, 222),	RGB(233,  30, 222),	RGB(232,  24, 223),
	/*  48 */ RGB(  0,  97,   1),	RGB(  0, 102,   1),	RGB(  0, 106,   1),	RGB(  0, 110,   1),	
	/*  52 */ RGB(  0, 115,   1),	RGB(  0, 119,   1),	RGB(  0, 123,   1),	RGB(  0, 128,   1),
	/*  56 */ RGB( 90, 134,   1),	RGB( 81, 130,   1),	RGB( 65, 121,   1),	RGB( 49, 113,   1),	
	/*  60 */ RGB( 33, 104,   1),	RGB( 17,  95,   1),	RGB(  1,  87,   1),	RGB(  1, 139,   1),
	/*  64 */ RGB( 51,  75,   0),	RGB( 57,  83,   0),	RGB( 63,  92,   1),	RGB( 69, 100,   1),	
	/*  68 */ RGB( 76, 109,   2),	RGB( 82, 117,   2),	RGB( 88, 126,   3),	RGB( 95, 135,   4),
	/*  72 */ RGB( 89, 170,   5),	RGB( 81, 109,   6),	RGB( 77, 118,  11),	RGB( 72, 110,  16),	
	/*  76 */ RGB( 68, 102,  21),	RGB( 64,  94,  26),	RGB( 59,  86,  31),	RGB( 55,  78,  36),
	/*  80 */ RGB( 51,  71,  41),	RGB( 56,  73,  41),	RGB( 56,  76,  42),	RGB( 57,  78,  43),	
	/*  84 */ RGB( 57,  81,  43),	RGB( 57,  83,  44),	RGB( 58,  86,  45),	RGB( 58,  88,  46),
	/*  88 */ RGB( 58,  91,  46),	RGB( 59,  93,  47),	RGB( 59,  96,  48),	RGB( 59,  99,  48),	
	/*  92 */ RGB( 60, 101,  49),	RGB( 60, 104,  50),	RGB( 60, 106,  51),	RGB( 61, 109,  51),
	/*  96 */ RGB( 61, 111,  52),	RGB( 61, 114,  53),	RGB( 62, 116,  54),	RGB( 62, 119,  54),	
	/* 100 */ RGB( 62, 122,  55),	RGB( 63, 124,  56),	RGB( 63, 127,  56),	RGB( 63, 129,  57),
	/* 104 */ RGB( 64, 132,  58),	RGB( 64, 134,  59),	RGB( 64, 137,  59),	RGB( 65, 139,  60),	
	/* 108 */ RGB( 65, 142,  61),	RGB( 65, 145,  61),	RGB( 66, 147,  62),	RGB( 66, 150,  63),
	/* 112 */ RGB( 66, 152,  64),	RGB( 67, 155,  64),	RGB( 67, 157,  65),	RGB( 67, 160,  66),	
	/* 116 */ RGB( 68, 162,  67),	RGB( 68, 165,  67),	RGB( 68, 168,  68),	RGB( 69, 170,  69),
	/* 120 */ RGB( 69, 173,  69),	RGB( 69, 175,  70),	RGB( 70, 178,  71),	RGB( 70, 180,  72),	
	/* 124 */ RGB( 70, 183,  72),	RGB( 71, 185,  73),	RGB( 71, 188,  74),	RGB( 72, 191,  75),
	/* 128 */ RGB( 23,  62,  24),	RGB( 24,  70,  25),	RGB( 26,  79,  26),	RGB( 27,  88,  28),	
	/* 132 */ RGB( 29,  96,  29),	RGB( 30, 105,  31),	RGB( 32, 114,  32),	RGB( 33, 123,  34),
	/* 136 */ RGB( 35, 131,  35),	RGB( 36, 140,  37),	RGB( 38, 149,  38),	RGB( 39, 158,  40),	
	/* 140 */ RGB( 41, 166,  41),	RGB( 42, 175,  43),	RGB( 44, 184,  44),	RGB( 46, 193,  46),
	/* 144 */ RGB( 47, 112,  48),	RGB( 49, 115,  49),	RGB( 50, 118,  51),	RGB( 52, 121,  52),	
	/* 148 */ RGB( 54, 124,  54),	RGB( 55, 127,  55),	RGB( 57, 130,  57),	RGB( 58, 133,  58),
	/* 152 */ RGB( 60, 137,  60),	RGB( 61, 140,  61),	RGB( 63, 143,  63),	RGB( 64, 146,  64),	
	/* 156 */ RGB( 66, 149,  66),	RGB( 68, 152,  67),	RGB( 69, 155,  69),	RGB( 71, 158,  70),
	/* 160 */ RGB( 72, 162,  72),	RGB( 74, 165,  73),	RGB( 75, 168,  75),	RGB( 77, 171,  76),	
	/* 164 */ RGB( 78, 174,  78),	RGB( 80, 177,  79),	RGB( 82, 180,  81),	RGB( 83, 183,  82),
	/* 168 */ RGB( 85, 187,  84),	RGB( 86, 190,  85),	RGB( 88, 193,  87),	RGB( 89, 196,  88),	
	/* 172 */ RGB( 91, 199,  90),	RGB( 92, 202,  91),	RGB( 94, 205,  93),	RGB( 96, 209,  95),
	/* 176 */ RGB( 98, 146,  97),	RGB( 99, 147,  98),	RGB(101, 149, 100),	RGB(103, 151, 101),	
	/* 180 */ RGB(104, 152, 103),	RGB(106, 154, 104),	RGB(107, 155, 106),	RGB(109, 157, 107),
	/* 184 */ RGB(110, 158, 109),	RGB(112, 160, 110),	RGB(114, 162, 112),	RGB(115, 163, 113),	
	/* 188 */ RGB(117, 165, 115),	RGB(118, 166, 116),	RGB(120, 168, 118),	RGB(122, 170, 120),
	/* 192 */ RGB(158, 112,   7),	RGB(149, 104,   9),	RGB(140,  97,  11),	RGB(131,  89,  13),	
	/* 196 */ RGB(122,  82,  15),	RGB(113,  74,  18),	RGB(105,  67,  20),	RGB( 96,  60,  22),
	/* 200 */ RGB( 87,  52,  24),	RGB( 95,  59,  21),	RGB(103,  66,  18),	RGB(111,  73,  15),	
	/* 204 */ RGB(119,  81,  13),	RGB(127,  88,  10),	RGB(135,  95,   7),	RGB(143, 103,   5),
	/* 208 */ RGB(139, 100,   5),	RGB(135,  98,   5),	RGB(132,  95,   5),	RGB(128,  93,   5),	
	/* 212 */ RGB(125,  90,   5),	RGB(121,  88,   6),	RGB(117,  86,   6),	RGB(114,  83,   6),
	/* 216 */ RGB(110,  81,   6),	RGB(107,  78,   6),	RGB(103,  76,   7),	RGB( 99,  74,   7),	
	/* 220 */ RGB( 96,  71,   7),	RGB( 92,  69,   7),	RGB( 89,  66,   7),	RGB( 85,  64,   8),
	/* 224 */ RGB( 81,  62,   8),	RGB( 78,  59,   8),	RGB( 74,  57,   8),	RGB( 71,  54,   8),	
	/* 228 */ RGB( 67,  52,   8),	RGB( 63,  50,   9),	RGB( 60,  47,   9),	RGB( 56,  45,   9),
	/* 232 */ RGB( 53,  42,   9),	RGB( 49,  40,   9),	RGB( 45,  38,  10),	RGB( 42,  35,  10),	
	/* 236 */ RGB( 38,  33,  10),	RGB( 35,  30,  10),	RGB( 31,  28,  10),	RGB( 28,  26,  11),
	/* 240 */ RGB( 83,  86,  49),	RGB( 80,  84,  48),	RGB( 78,  82,  47),	RGB( 75,  80,  47),	
	/* 244 */ RGB( 72,  78,  46),	RGB( 70,  76,  45),	RGB( 67,  74,  45),	RGB( 64,  72,  44),
	/* 248 */ RGB( 62,  70,  43),	RGB( 59,  68,  43),	RGB( 57,  66,  42),	RGB( 54,  64,  41),	
	/* 252 */ RGB( 51,  62,  41),	RGB( 49,  60,  40),	RGB( 46,  58,  39),	RGB( 44,  57,  39)
};


COLORREF PanelParameters::DefaultColormap(int i)
{
	assert(256 == CountOf(DefaultMap));
	assert(i>=0);
	assert(i<CountOf(DefaultMap));
	return DefaultMap[i];
}
